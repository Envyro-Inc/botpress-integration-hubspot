{
  "version": 3,
  "sources": ["../../../src/code-generation/integration-schemas/configuration-module.ts"],
  "sourcesContent": ["import { INDEX_FILE } from '../const'\nimport { jsonSchemaToTypeScriptType } from '../generators'\nimport { Module } from '../module'\nimport * as strings from '../strings'\nimport type * as types from '../typings'\n\nexport class ConfigurationModule extends Module {\n  public static async create(configuration: types.ConfigurationDefinition): Promise<ConfigurationModule> {\n    const { schema } = configuration\n    if (!schema) {\n      return new ConfigurationModule({\n        path: INDEX_FILE,\n        exportName: 'Configuration',\n        content: 'export type Configuration = Record<string, never>;',\n      })\n    }\n\n    const name = 'configuration'\n\n    const exportName = strings.typeName(name)\n    return new ConfigurationModule({\n      path: INDEX_FILE,\n      exportName,\n      content: await jsonSchemaToTypeScriptType(schema, exportName),\n    })\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA2B;AAC3B,wBAA2C;AAC3C,oBAAuB;AACvB,cAAyB;AAGlB,MAAM,4BAA4B,qBAAO;AAAA,EAC9C,aAAoB,OAAO,eAA4E;AACrG,UAAM,EAAE,OAAO,IAAI;AACnB,QAAI,CAAC,QAAQ;AACX,aAAO,IAAI,oBAAoB;AAAA,QAC7B,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AAEA,UAAM,OAAO;AAEb,UAAM,aAAa,QAAQ,SAAS,IAAI;AACxC,WAAO,IAAI,oBAAoB;AAAA,MAC7B,MAAM;AAAA,MACN;AAAA,MACA,SAAS,UAAM,8CAA2B,QAAQ,UAAU;AAAA,IAC9D,CAAC;AAAA,EACH;AACF;",
  "names": []
}
