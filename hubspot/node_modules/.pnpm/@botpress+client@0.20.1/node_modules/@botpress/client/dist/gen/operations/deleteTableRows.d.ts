export interface DeleteTableRowsRequestHeaders {
}
export interface DeleteTableRowsRequestQuery {
}
export interface DeleteTableRowsRequestParams {
    table: string;
}
export interface DeleteTableRowsRequestBody {
    /**
     * @maxItems 1000
     */
    ids?: number[];
    /**
     * Filter to apply when deleting rows. Example: \{ "name": \{ "$eq": "John" \} \}
     */
    filter?: {
        [k: string]: any;
    };
    /**
     * Flag to delete all rows. Use with caution as this action is irreversible.
     */
    deleteAllRows?: boolean;
}
export type DeleteTableRowsInput = DeleteTableRowsRequestBody & DeleteTableRowsRequestHeaders & DeleteTableRowsRequestQuery & DeleteTableRowsRequestParams;
export type DeleteTableRowsRequest = {
    headers: DeleteTableRowsRequestHeaders;
    query: DeleteTableRowsRequestQuery;
    params: DeleteTableRowsRequestParams;
    body: DeleteTableRowsRequestBody;
};
export declare const parseReq: (input: DeleteTableRowsInput) => DeleteTableRowsRequest & {
    path: string;
};
export interface DeleteTableRowsResponse {
    deletedRows: number;
}
