export interface ListIntegrationApiKeysRequestHeaders {
}
export interface ListIntegrationApiKeysRequestQuery {
    integrationId: string;
}
export interface ListIntegrationApiKeysRequestParams {
}
export interface ListIntegrationApiKeysRequestBody {
}
export type ListIntegrationApiKeysInput = ListIntegrationApiKeysRequestBody & ListIntegrationApiKeysRequestHeaders & ListIntegrationApiKeysRequestQuery & ListIntegrationApiKeysRequestParams;
export type ListIntegrationApiKeysRequest = {
    headers: ListIntegrationApiKeysRequestHeaders;
    query: ListIntegrationApiKeysRequestQuery;
    params: ListIntegrationApiKeysRequestParams;
    body: ListIntegrationApiKeysRequestBody;
};
export declare const parseReq: (input: ListIntegrationApiKeysInput) => ListIntegrationApiKeysRequest & {
    path: string;
};
export interface ListIntegrationApiKeysResponse {
    iaks: {
        id: string;
        createdAt: string;
        note: string;
    }[];
}
