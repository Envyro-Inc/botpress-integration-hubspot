export interface ChargeWorkspaceUnpaidInvoicesRequestHeaders {
}
export interface ChargeWorkspaceUnpaidInvoicesRequestQuery {
}
export interface ChargeWorkspaceUnpaidInvoicesRequestParams {
    id: string;
}
export interface ChargeWorkspaceUnpaidInvoicesRequestBody {
    /**
     * @minItems 1
     */
    invoiceIds?: string[];
}
export type ChargeWorkspaceUnpaidInvoicesInput = ChargeWorkspaceUnpaidInvoicesRequestBody & ChargeWorkspaceUnpaidInvoicesRequestHeaders & ChargeWorkspaceUnpaidInvoicesRequestQuery & ChargeWorkspaceUnpaidInvoicesRequestParams;
export type ChargeWorkspaceUnpaidInvoicesRequest = {
    headers: ChargeWorkspaceUnpaidInvoicesRequestHeaders;
    query: ChargeWorkspaceUnpaidInvoicesRequestQuery;
    params: ChargeWorkspaceUnpaidInvoicesRequestParams;
    body: ChargeWorkspaceUnpaidInvoicesRequestBody;
};
export declare const parseReq: (input: ChargeWorkspaceUnpaidInvoicesInput) => ChargeWorkspaceUnpaidInvoicesRequest & {
    path: string;
};
export interface ChargeWorkspaceUnpaidInvoicesResponse {
    /**
     * Invoices that were successfully charged by this request.
     */
    chargedInvoices: {
        id: string;
        amount: number;
    }[];
    /**
     * Invoices that failed to be charged by this request.
     */
    failedInvoices: {
        id: string;
        amount: number;
        failedReason: string;
    }[];
}
