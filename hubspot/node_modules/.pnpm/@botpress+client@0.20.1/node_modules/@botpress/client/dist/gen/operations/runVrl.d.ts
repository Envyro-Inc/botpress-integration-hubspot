export interface RunVrlRequestHeaders {
}
export interface RunVrlRequestQuery {
}
export interface RunVrlRequestParams {
}
export interface RunVrlRequestBody {
    data: {
        [k: string]: any;
    };
    script: string;
}
export type RunVrlInput = RunVrlRequestBody & RunVrlRequestHeaders & RunVrlRequestQuery & RunVrlRequestParams;
export type RunVrlRequest = {
    headers: RunVrlRequestHeaders;
    query: RunVrlRequestQuery;
    params: RunVrlRequestParams;
    body: RunVrlRequestBody;
};
export declare const parseReq: (input: RunVrlInput) => RunVrlRequest & {
    path: string;
};
export interface RunVrlResponse {
    data: {
        [k: string]: any;
    };
    result?: any;
}
