export interface CheckHandleAvailabilityRequestHeaders {
}
export interface CheckHandleAvailabilityRequestQuery {
}
export interface CheckHandleAvailabilityRequestParams {
}
export interface CheckHandleAvailabilityRequestBody {
    handle: string;
}
export type CheckHandleAvailabilityInput = CheckHandleAvailabilityRequestBody & CheckHandleAvailabilityRequestHeaders & CheckHandleAvailabilityRequestQuery & CheckHandleAvailabilityRequestParams;
export type CheckHandleAvailabilityRequest = {
    headers: CheckHandleAvailabilityRequestHeaders;
    query: CheckHandleAvailabilityRequestQuery;
    params: CheckHandleAvailabilityRequestParams;
    body: CheckHandleAvailabilityRequestBody;
};
export declare const parseReq: (input: CheckHandleAvailabilityInput) => CheckHandleAvailabilityRequest & {
    path: string;
};
export interface CheckHandleAvailabilityResponse {
    available: boolean;
    suggestions: string[];
    usedBy?: string;
}
